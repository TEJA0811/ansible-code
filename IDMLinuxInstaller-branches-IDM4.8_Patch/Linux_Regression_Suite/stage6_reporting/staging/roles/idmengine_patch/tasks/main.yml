---
# tasks file for idmengine_patch

    - name: "Unmount the mount location if mounted"
      mount:
         path: "{{ build_mount_location }}"
         state: unmounted
      notify: handler_for_message - umount_iso_if_present
      tags: umount_iso_if_present

    - name: 'Create Temporary Directory on Target Server for ansible'
      file:
          path: "{{ build_dest_location }}"
          state: directory
          mode: '644'
      notify: handler_for_message - temp_dir_target
      tags: temp_dir_target

    - name: "Copy local {{ service_pack_iso_name }} build to Target Server"
      copy:
          src: "{{ build_src_location }}/{{ service_pack_iso_name }}"
          dest: "{{ build_dest_location }}/{{ service_pack_iso_name }}"
      notify: handler_for_message - copy_iso_to_target
      tags: copy_iso_to_target

    - name: "Mount {{ service_pack_iso_name }} on Target Server "
      mount:
         path: "{{ build_mount_location }}"
         src: "{{build_dest_location}}/{{ service_pack_iso_name }}"
         state: mounted
         fstype: iso9660
      notify: handler_for_message - build_mount
      tags: build_mount

    - name: "Copy Silent Patching Properties files and IDM48-APPS_HF1 to Target Server"
      copy:
        src: "{{ item }}"
        dest: "{{ build_dest_location}}"
        owner: root
        mode: 600
      with_fileglob:
      - "{{ role_path }}/files/*"
      tags: copy_silent_prop_patch

    - name: "Apply IDM48-APPS_HF1 patch to Reporting server"
      shell: |
           cd "{{ build_dest_location }}"
           rpm -Uvh netiq-nginx-1.14.2-1.x86_64.rpm --nodeps --force
           systemctl restart netiq-nginx.service
           systemctl daemon-reload

    - name: "Perform IDV Upgrade"
      block:
         - name: "Run Un-attended upgrade of IDV"
           shell: |
               cd "{{ build_mount_location }}/IDVault/setup"
               bash nds-install -u
         - name: "Setting the environment for IDV"
           shell: . /opt/novell/eDirectory/bin/ndspath

         - name: "Perform NDSCONFIG upgrade for IDV"
           shell: ndsconfig upgrade -a "{{ ID_VAULT_ADMIN }}" -w "{{ ID_VAULT_PASSWORD }}" --configure-eba-now "{{ configure_eba | string }}"
           notify: handler_for_message - idv_upgrade
      when: perform_idv_update == 'true'
      tags: idv_upgrade

    - name: "Update IDM Engine on Target Server"
      shell: |
           cd "{{ build_mount_location }}"
           ./install.sh -ssc -s -f "{{ build_dest_location }}/silent_update_engine.properties"
      notify:
           - handler_for_message - update_engine
      tags: update_engine

#    - name: "Copy script for updating Postgres Version"
#      copy:
#        src: "{{ role_path }}/files/pg_upgrade.sh"
#        dest: "{{ build_dest_location}}/pg_upgrade.sh"
#        owner: root
#        mode: '0777'
#      tags: copy_postgres_upgrade_script

#    - name: "Update Postgres Version"
#      shell: |
#           cd "{{ build_dest_location}}"
#           ./pg_upgrade.sh
#      tags: update_postgres

    - name: "Update User Apps on Target Server"
      shell: |
           cd "{{ build_mount_location }}"
           ./install.sh -ssc -s -f "{{ build_dest_location }}/silent_update_apps.properties"
      notify:
           - handler_for_message - update_apps
      tags: update_apps

    - name: "Update Identity reporting on Target Server"
      shell: |
           cd "{{ build_mount_location }}"
           ./install.sh -ssc -s -f "{{ build_dest_location }}/silent_update_rpt.properties"
      notify:
           - handler_for_message - update_rpt
      tags: update_rpt

    - name: "Update ism-config file with rpt download server"
      shell: |
          printf "\ncom.netiq.rpt.download.server.url={{ IDMRPT_URL }}" >> /opt/netiq/idm/apps/tomcat/conf/ism-configuration.properties

    - name: "Restart Tomcat on Target Server"
      shell: |
           systemctl restart netiq-tomcat.service
      notify:
           - handler_for_message - restart_tc
      tags: restart_tc
    
    - name: "Wait for 3 mins for Tomcat to start"
      pause:
        minutes: 5

    - meta: flush_handlers
...


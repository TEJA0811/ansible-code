---
# tasks file for engine

- name : Get IDM engine image file stats
  local_action: stat path="{{ playbook_dir | dirname }}/docker-images/IDM_{{marketing_major}}{{marketing_minor}}{{marketing_revision}}_identityengine.tar.gz"
  register: enginefile

- name : Check for image existence in Docker host
  shell : docker images | grep identityengine | grep {{marketing_major}}.{{marketing_minor}}.{{marketing_revision}}
  register : imagealreadyloaded
  ignore_errors : yes

- name : Copy the IDM engine image to Docker host
  copy :
          src : "{{ playbook_dir | dirname }}/docker-images/IDM_{{marketing_major}}{{marketing_minor}}{{marketing_revision}}_identityengine.tar.gz"
          dest : "{{ engine_shared_volume }}"
  when : 
        - enginefile.stat.exists
        - imagealreadyloaded.rc == 1
        
- name : Copy silent.properties file to target server
  copy :
    src : "{{ playbook_dir }}/roles/variables/files/silent.properties"
    dest : "{{ engine_shared_volume }}"

- name : Load the IDM image
  docker_image:
    state : present
    name: identityengine:idm-{{marketing_major}}.{{marketing_minor}}.{{marketing_revision}}
    load_path: "{{ engine_shared_volume }}/IDM_{{marketing_major}}{{marketing_minor}}{{marketing_revision}}_identityengine.tar.gz"
    timeout: 3000
    source: load
  when : imagealreadyloaded.rc == 1

- name : Print shared volume location
  debug :
    msg : "{{ engine_shared_volume }}"
    
- name : Copy IDM Engine files to shared volume
  copy :
    src : "{{ playbook_dir }}/input/{{ item }}"
    dest : "{{ engine_shared_volume }}"
  loop: "{{ engine_files }}"
  when: engine_files is defined

- name : Deploy IDM Engine container
  docker_container :
    name : "{{ engine_container_name }}"
    image : "identityengine:idm-{{marketing_major}}.{{marketing_minor}}.{{marketing_revision}}"
    state: started
    stop_timeout: 300
    hostname : "{{ ID_VAULT_HOST }}"
    network_mode : "{{ network_set }}"
    networks :
      - name : "{{ network_set }}"
        ipv4_address : "{{ engine_container_ipaddress }}"
    volumes : "{{ engine_volumes | default([]) }}"
    ports : "{{ engine_port_mapping | default([]) }}"
    dns_servers : "{{ dns_list | default([]) }}"     
    env:
      SILENT_INSTALL_FILE : /config/silent.properties
    tty: true
    detach: true

- name: Wait until IDM Engine is configured
  shell: cat "{{ engine_shared_volume }}/idm/log/idmconfigure.log"
  register: data
  until : "'Completed configuration of : Identity Manager Engine' in data.stdout"
  delay : 15
  retries : 30

- name : Delete the IDM engine tarball
  file :
          path : "{{ engine_shared_volume }}/IDM_{{marketing_major}}{{marketing_minor}}{{marketing_revision}}_identityengine.tar.gz"
          state : absent

- name: Delete silent.properties file
  file:
    path: "{{ engine_shared_volume }}/silent.properties"
    state: absent
    

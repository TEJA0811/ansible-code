---
## tasks file for install_IDC

- name : Get IDConsole image file stats
  local_action: stat path="{{ images_dir }}/docker-images/identityconsole_{{idconsole_marketing_major}}{{idconsole_marketing_minor}}{{idconsole_marketing_revision}}.tar.gz"
  register: enginefile

- name : Check for image existence in Docker host
  shell : docker images | grep identityconsole | grep {{idconsole_marketing_major}}.{{idconsole_marketing_minor}}.{{idconsole_marketing_revision}}
  register : imagealreadyloaded
  ignore_errors : yes

- name : Print shared volume location
  debug :
    msg : "{{ idconsole_shared_volume }}"
    
- name: Create "{{ idconsole_shared_volume }}" if it does not exist
  file:
    path: "{{ idconsole_shared_volume }}"
    state: directory
    mode: 0775
    
- name : Copy the IDM engine image to Docker host
  copy :
          src : "{{ images_dir }}/docker-images/identityconsole_{{idconsole_marketing_major}}{{idconsole_marketing_minor}}{{idconsole_marketing_revision}}.tar.gz"
          dest : "{{ idconsole_shared_volume }}"
  when : 
        - enginefile.stat.exists
        - imagealreadyloaded.rc == 1
        
- name : Load the IDM image
  docker_image:
    state : present
    name: "identityconsole:{{idconsole_marketing_major}}.{{idconsole_marketing_minor}}.{{idconsole_marketing_revision}}"
    load_path: "{{ idconsole_shared_volume }}/identityconsole_{{idconsole_marketing_major}}{{idconsole_marketing_minor}}{{idconsole_marketing_revision}}.tar.gz"
    timeout: 3000
    source: load
  when : imagealreadyloaded.rc == 1
  
- name: Create "{{ idconsole_shared_volume }}/data" if it does not exist
  file:
    path: "{{ idconsole_shared_volume }}/data"
    state: directory
    mode: 0775
  
- name : Copy IDConsole files to shared volume's data
  copy :
    src : "{{ role_path }}/files/{{ item }}"
    dest : "{{ idconsole_shared_volume }}/data"
  loop: "{{ idconsole_files }}"
  when: idconsole_files is defined
  
- name : Deploy Identity Console container
  docker_container :
    name : "{{ idconsole_container_name }}"
    image : "identityconsole:{{idconsole_marketing_major}}.{{idconsole_marketing_minor}}.{{idconsole_marketing_revision}}"
    state: started
    stop_timeout: 300
    hostname : "{{ idconsole_container_hostname }}"
    network_mode : "{{ network_set }}"
    networks :
      - name : "{{ network_set }}"
#        ipv4_address : "{{ engine_container_ipaddress }}"
    volumes : "{{ idconsole_volumes | default([]) }}"
    ports : "{{ idconsole_port_mapping | default([]) }}"
#    dns_servers : "{{ dns_list | default([]) }}"     
    env:
      ACCEPT_EULA : Y
    tty: true
    detach: true
      
- name : Delete the IDConsole tarball
  file :
          path : "{{ idconsole_shared_volume }}/identityconsole_{{idconsole_marketing_major}}{{idconsole_marketing_minor}}{{idconsole_marketing_revision}}.tar.gz"
          state : absent

...

      
           
      
      

      

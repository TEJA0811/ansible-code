---
# tasks file for engine

- name : Get IDM engine image file stats
  local_action: stat path="{{ images_dir }}/docker-images/IDM_{{marketing_major}}{{marketing_minor}}{{marketing_revision}}_identityengine.tar.gz"
  register: enginefile

- name : Check for image existence in Docker host
  shell : docker images | grep identityengine | grep {{marketing_major}}.{{marketing_minor}}.{{marketing_revision}}
  register : imagealreadyloaded
  ignore_errors : yes

- name : Print shared volume location
  debug :
    msg : "{{ engine_shared_volume }}"
    
- name: Create "{{ engine_shared_volume }}" if it does not exist
  file:
    path: "{{ engine_shared_volume }}"
    state: directory
    mode: 0775
    
- name : Copy the IDM engine image to Docker host
  copy :
          src : "{{ images_dir }}/docker-images/IDM_{{marketing_major}}{{marketing_minor}}{{marketing_revision}}_identityengine.tar.gz"
          dest : "{{ engine_shared_volume }}"
  when : 
        - enginefile.stat.exists
        - imagealreadyloaded.rc == 1
        
- name : Load the IDM image
  docker_image:
    state : present
    name: identityengine:idm-{{marketing_major}}.{{marketing_minor}}.{{marketing_revision}}
    load_path: "{{ engine_shared_volume }}/IDM_{{marketing_major}}{{marketing_minor}}{{marketing_revision}}_identityengine.tar.gz"
    timeout: 3000
    source: load
  when : imagealreadyloaded.rc == 1

- name: "Add nds user to Remote VM"
  shell: |
    useradd -p $(openssl passwd -crypt 'novell') -u 35753 -m nds
  ignore_errors: yes
    
- name: Create "{{ engine_shared_volume }}/idm/mountfiles" if it does not exist
  file:
    path: "{{ engine_shared_volume }}/idm/mountfiles"
    state: directory
    mode: 0775
    
- name : Copy silent.properties file to target server
  template :
    src : "silent.properties"
    dest : "{{ engine_shared_volume }}"
    
- name : Copy IDM Engine files to shared volume
  copy :
    src : "{{ role_path }}/files/{{ item }}"
    dest : "{{ engine_shared_volume }}/idm/mountfiles"
  loop: "{{ engine_files }}"
  when: engine_files is defined
  
- name: "Assign permissions to idm Directory"
  shell: chown -R 35753:root "{{ engine_shared_volume }}/idm"

- name : Deploy IDM Engine container
  docker_container :
    name : "{{ engine_container_name }}"
    image : "identityengine:idm-{{marketing_major}}.{{marketing_minor}}.{{marketing_revision}}"
    state: started
    stop_timeout: 300
    hostname : "{{ engine_container_hostname }}"
    network_mode : "{{ network_set }}"
    networks :
      - name : "{{ network_set }}"
#        ipv4_address : "{{ engine_container_ipaddress }}"
    volumes : "{{ engine_volumes | default([]) }}"
    ports : "{{ engine_port_mapping | default([]) }}"
#    dns_servers : "{{ dns_list | default([]) }}"     
    env:
      SILENT_INSTALL_FILE : /config/silent.properties
    tty: true
    detach: true

- name: Wait until IDM Engine is configured
  shell: cat "{{ engine_shared_volume }}/idm/log/idmconfigure.log"
  register: data
  until : "'Completed configuration of : Identity Manager Engine' in data.stdout"
  delay : 15
  retries : 60
  
- name: "Pause for 3 mins until IDM is stable"
  pause:
    minutes: 3
  
- name: "Copy XPOZ Required files to Engine Server"
  copy:
    src: "modify_trustees.ldif"
    dest: "{{ engine_shared_volume }}"
    owner: root
    group: root
    mode: '755'

- name: "Perform XPOZ Tasks on IDM Engine Server"
  shell: |
    docker exec -it --user nds engine-container /opt/novell/eDirectory/bin/ldapconfig set  "Require TLS for Simple Binds with Password=no" -a "{{ ID_VAULT_ADMIN }}" -w "{{ ID_VAULT_PASSWORD }}" >>"{{ engine_shared_volume }}/tmp.log"
    docker exec -it --user nds engine-container /opt/novell/eDirectory/bin/ldapmodify  -h "{{ansible_default_ipv4.address}}" -D "{{ ID_VAULT_ADMIN_LDAP }}" -w "{{ ID_VAULT_PASSWORD }}" -f "/config/modify_trustees.ldif" >>"{{ engine_shared_volume }}/tmp.log"
    docker exec -it --user nds engine-container /opt/novell/eDirectory/bin/nmasinst -i "{{ ID_VAULT_ADMIN }}" "{{ ID_VAULT_TREENAME }}"  -h "{{ansible_default_ipv4.address}}" -w "{{ ID_VAULT_PASSWORD }}"  >>"{{ engine_shared_volume }}/tmp.log"
    docker exec -it --user nds engine-container /opt/novell/eDirectory/bin/nmasinst -addmethod "{{ ID_VAULT_ADMIN }}"  "{{ ID_VAULT_TREENAME }}" "/idm/IDVault/nmas/NmasMethods/Novell/CertMutual/config.txt" -h "{{ansible_default_ipv4.address }}"  -w "{{ ID_VAULT_PASSWORD }}"  >>"{{ engine_shared_volume }}/tmp.log"
    docker exec -it --user nds engine-container /opt/novell/eDirectory/bin/nmasinst -addmethod "{{ ID_VAULT_ADMIN }}"  "{{ ID_VAULT_TREENAME }}" "/idm/IDVault/nmas/NmasMethods/Novell/ChallengeResponse/config.txt" -h "{{ ansible_default_ipv4.address }}" -w "{{ ID_VAULT_PASSWORD }}"  >>"{{ engine_shared_volume }}/tmp.log"
    docker exec -it --user nds engine-container /opt/novell/eDirectory/bin/nmasinst -addmethod "{{ ID_VAULT_ADMIN }}"  "{{ ID_VAULT_TREENAME }}" "/idm/IDVault/nmas/NmasMethods/Novell/DigestMD5/config.txt" -h "{{ ansible_default_ipv4.address }}" -w "{{ ID_VAULT_PASSWORD }}"  >>"{{ engine_shared_volume }}/tmp.log"
    docker exec -it --user nds engine-container /opt/novell/eDirectory/bin/nmasinst -addmethod "{{ ID_VAULT_ADMIN }}"  "{{ ID_VAULT_TREENAME }}" "/idm/IDVault/nmas/NmasMethods/Novell/GSSAPI/config.txt" -h "{{ ansible_default_ipv4.address }}" -w "{{ ID_VAULT_PASSWORD }}"  >>"{{ engine_shared_volume }}/tmp.log"
    docker exec -it --user nds engine-container /opt/novell/eDirectory/bin/nmasinst -addmethod "{{ ID_VAULT_ADMIN }}"  "{{ ID_VAULT_TREENAME }}" "/idm/IDVault/nmas/NmasMethods/Novell/NDS/config.txt" -h "{{ ansible_default_ipv4.address }}"  -w "{{ ID_VAULT_PASSWORD }}"  >>"{{ engine_shared_volume }}/tmp.log"
    docker exec -it --user nds engine-container /opt/novell/eDirectory/bin/nmasinst -addmethod "{{ ID_VAULT_ADMIN }}"  "{{ ID_VAULT_TREENAME }}" "/idm/IDVault/nmas/NmasMethods/Novell/SAML/config.txt" -h "{{ ansible_default_ipv4.address }}"  -w "{{ ID_VAULT_PASSWORD }}"  >>"{{ engine_shared_volume }}/tmp.log"
    docker exec -it --user nds engine-container /opt/novell/eDirectory/bin/nmasinst -addmethod "{{ ID_VAULT_ADMIN }}"  "{{ ID_VAULT_TREENAME }}" "/idm//IDVault/nmas/NmasMethods/Novell/SimplePassword/config.txt" -h "{{ ansible_default_ipv4.address }}"  -w "{{ ID_VAULT_PASSWORD }}"  >>"{{ engine_shared_volume }}/tmp.log"
    docker exec -it --user nds engine-container /opt/novell/eDirectory/bin/nmasinst -addmethod "{{ ID_VAULT_ADMIN }}"  "{{ ID_VAULT_TREENAME }}" "/idm/IDVault/nmas/NmasMethods/Novell/scram/config.txt" -h "{{ ansible_default_ipv4.address }}" -w "{{ ID_VAULT_PASSWORD }}"  >>"{{ engine_shared_volume }}/tmp.log"
    docker exec -it --user nds engine-container /opt/novell/eDirectory/bin/ndsmanage stopall  >>"{{ engine_shared_volume }}/tmp.log"
    docker exec -it --user nds engine-container /opt/novell/eDirectory/bin/ndsmanage startall  >>"{{ engine_shared_volume }}/tmp.log"
  
- name: "Prepare XPOZ.ENV.TXT for XPOZ"
  template:
    src: XPOZ_ENV.TXT
    dest: "{{ playbook_dir }}/../validation/roles/xpoz_engine/files/XPOZ_ENV.TXT"
    owner: root
    group: root
    mode: '644'
  delegate_to: 'localhost' 

- name : Delete the IDM engine tarball
  file :
          path : "{{ engine_shared_volume }}/IDM_{{marketing_major}}{{marketing_minor}}{{marketing_revision}}_identityengine.tar.gz"
          state : absent

- name: Delete silent.properties file
  file:
    path: "{{ engine_shared_volume }}/silent.properties"
    state: absent
    

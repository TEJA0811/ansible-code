---
# tasks file for engine_patch

- name: "Stop container: {{engine_container_name }}"
  docker_container:
    name: "{{engine_container_name }}"
    state: stopped
  ignore_errors: yes
    
- name: "Remove container: {{engine_container_name }}"
  docker_container:
    name: "{{engine_container_name }}"
    state: absent
    
- name: "Remove image: idm-{{marketing_major}}.{{marketing_minor}}.{{marketing_revision}}"
  docker_image:
    state: absent
    name: "identityengine"
    tag: "idm-{{marketing_major}}.{{marketing_minor}}.{{marketing_revision}}"
  ignore_errors: yes
    
#- name: "Remove shared volume: {{ engine_shared_volume }}"
#  file:
#    path: "{{ engine_shared_volume }}"
#    state: absent
#    mode: '644'

- name : Copy the IDM engine image to Docker host
  copy :
          src : "{{ images_dir }}/docker-images/IDM_{{marketing_major}}{{marketing_minor}}{{marketing_revision}}_identityengine.tar.gz"
          dest : "{{ engine_shared_volume }}"
#  when : 
#        - enginefile.stat.exists
#        - imagealreadyloaded.rc == 1
        
- name : Load the IDM image
  docker_image:
    state : present
    name: identityengine:idm-{{marketing_major}}.{{marketing_minor}}.{{marketing_revision}}
    load_path: "{{ engine_shared_volume }}/IDM_{{marketing_major}}{{marketing_minor}}{{marketing_revision}}_identityengine.tar.gz"
    timeout: 3000
    source: load
#  when : imagealreadyloaded.rc == 1
  
- name : Copy credentials.properties file to target server
  template :
    src : "credentials.properties"
    dest : "{{ engine_shared_volume }}"
  
- name : Deploy IDM Engine container
  docker_container :
    name : "{{ engine_container_name }}"
    image : "identityengine:idm-{{marketing_major}}.{{marketing_minor}}.{{marketing_revision}}"
    state: started
    stop_timeout: 300
    hostname : "{{ engine_container_hostname }}"
    network_mode : "{{ network_set }}"
    networks :
      - name : "{{ network_set }}"
#        ipv4_address : "{{ engine_container_ipaddress }}"
    volumes : "{{ engine_volumes | default([]) }}"
    ports : "{{ engine_port_mapping | default([]) }}"
#    dns_servers : "{{ dns_list | default([]) }}"     
    env:
      SILENT_INSTALL_FILE : /config/credentials.properties
    tty: true
    detach: true

- name: "Pause for 2 mins until IDM is stable"
  pause:
    minutes: 2

- name: "Perform XPOZ Tasks on IDM Engine Server"
  shell: |
    docker exec -it --user nds engine-container /opt/novell/eDirectory/bin/ldapconfig set  "Require TLS for Simple Binds with Password=no" -a "{{ ID_VAULT_ADMIN }}" -w "{{ ID_VAULT_PASSWORD }}" >>"{{ engine_shared_volume }}/tmp.log"

#- name: Delete silent.properties file
#  file:
#    path: "{{ engine_shared_volume }}/credentials.properties"
#    state: absent
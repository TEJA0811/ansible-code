---

# tasks file for fanout agent
  
- name : Get the Fanout Agent image file stats
  local_action: stat path="{{ images_dir }}/docker-images/IDM_{{marketing_major}}{{marketing_minor}}{{marketing_revision}}_fanoutagent.tar.gz"
  register: foafile

- name : Check for image existence in Docker host
  shell : docker images | grep fanoutagent | grep {{marketing_major}}.{{marketing_minor}}.{{marketing_revision}}
  register : imagealreadyloaded
  ignore_errors : yes

- name: Create "{{ fanoutagent_shared_volume }}" if it does not exist
  file:
    path: "{{ fanoutagent_shared_volume }}"
    state: directory
    mode: 0775

- name : Copy the Fanout Agent image to Docker host
  copy :
          src : "{{ images_dir }}/docker-images/IDM_{{marketing_major}}{{marketing_minor}}{{marketing_revision}}_fanoutagent.tar.gz"
          dest : "{{ fanoutagent_shared_volume }}"
  when : 
        - foafile.stat.exists
        - imagealreadyloaded.rc == 1

- name : Load the Fanout Agent image
  docker_image:
    state : present
    name: fanoutagent:idm-{{marketing_major}}.{{marketing_minor}}.{{marketing_revision}}
    load_path: "{{fanoutagent_shared_volume}}/IDM_{{marketing_major}}{{marketing_minor}}{{marketing_revision}}_fanoutagent.tar.gz"
    timeout: 3000
    source: load
  notify : Load FANOUT AGENT Image
  when : imagealreadyloaded.rc == 1
  
#- name : Copy silent.properties file to target server
#  template :
#    src : "silent.properties"
#    dest : "{{ fanoutagent_shared_volume }}" 
    
- name : Copy Fanout Agent files to shared volume
  copy :
    src : "{{ role_path }}/files/{{ item }}"
    dest : "{{ fanoutagent_shared_volume }}"
    mode: '755'
  loop: "{{ fanoutagent_files }}"
  when: fanoutagent_files is defined

- name : Deploy Fanout Agent container
  docker_container :
    name : "{{ fanoutagent_container_name }}"
    image : "fanoutagent:idm-{{marketing_major}}.{{marketing_minor}}.{{marketing_revision}}"
    state: started
    stop_timeout: 300
    hostname : "{{ fanoutagent_container_hostname }}"
    network_mode : "{{ network_set }}"
    networks :
      - name : "{{ network_set }}"
#        ipv4_address : "{{ fanoutagent_container_ipaddress }}"
    volumes : "{{ fanoutagent_volumes | default([]) }}"
    ports : "{{ fanoutagent_port_mapping | default([]) }}"
#    dns_servers : "{{ dns_list | default([]) }}"
#    env:
#      SILENT_INSTALL_FILE : /config/silent.properties
  tags : deploy_fanoutagent_container
  notify : Deploy FANOUT AGENT Container
  
- name: "Run commands on Docker container"
  community.docker.docker_container_exec:
    container: foa-container
    command: ./startAgent
    chdir: /opt/novell/dirxml/fanoutagent/bin/
  register: result

#- name: Print stdout
#  debug:
#    var: result.stdout

- name: "Add foa-config file"
  template:
    src: "fanoutagent-config.properties"
    dest: "{{ fanoutagent_shared_volume }}/fanoutagent/config/"
    owner: root
    group: root
    mode: '644'
    
- name: "Run commands on Docker container"
  community.docker.docker_container_exec:
    container: foa-container
    command: ./startAgent -config ../config/fanoutagent-config.properties
    chdir: /opt/novell/dirxml/fanoutagent/bin/

- name : Delete Fanout Agent tarball
  file :
          path : "{{ fanoutagent_shared_volume }}/IDM_{{marketing_major}}{{marketing_minor}}{{marketing_revision}}_fanoutagent.tar.gz"
          state : absent
          
- name: Delete silent.properties file
  file:
    path: "{{ fanoutagent_shared_volume }}/silent.properties"
    state: absent


